/*
 * generated by Xtext 2.30.0
 */
package sdu.abba.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.xbase.testing.CompilationTestHelper
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(EnvironmentalMonitoringInjectorProvider)
class GenerationTest {
	@Inject extension CompilationTestHelper					// The actual compilation logic
	
	@Test
	def void generationTest() {
		
		'''
			machine MachineA
			  sensor SensorA
			    sampling rate = 5/s
		'''
		.assertCompilesTo(
		'''
			[
				{
					"name": "MachineA",
					"sensors": [
						{
							"name": "SensorA",
							"settings": {
								"samplingRate": 5.0
							}
						}
					]
				}
			]
		''')
		
		// TODO: Validate this JSON. The test will validate of the fields are correct as this is an interface
	}
	
	def boolean isValid(String json) {
//	    try {
//	        new JSONObject(json);
//	    } catch (JSONException e) {
//	        return false;
//	    }
	    return true;
	}
}
